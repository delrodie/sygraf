<?php

namespace AppBundle\Repository;

use AppBundle\Controller\DefaultController;
use AppBundle\Form\ParticiperType;

/**
 * ChefRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ChefRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * Liste ordonnÃ©e des chefs
     * @uses by ChefController:newAction()
     */
    public function findListeOrd()
    {
        return $this->createQueryBuilder('c')
                    ->orderBy('c.nom', 'ASC')
                    ->addOrderBy('c.prenoms', 'ASC')
                    ->getQuery()->getResult()
            ;
    }

    /**
     * Liste des stagiaires
     * @uses ParticiperType
     */
    public function listeStagiares($region, $level)
    {
        if ($level == 'C'){
            return $this->createQueryBuilder('c')
                        ->innerJoin('c.region', 'r')
                        ->where('r.id = :region')
                        ->andWhere('c.classe is NULL')
                        ->orderBy('c.nom', 'ASC')
                        ->addOrderBy('c.prenoms', 'ASC')
                        ->setParameter('region', $region)
                ;
        }elseif ($level == 'B'){
            return $this->createQueryBuilder('c')
                        ->innerJoin('c.region', 'r')
                        ->Where('c.classe = :c')
                        //->orWhere('c.classe <> :B')
                        ->orWhere('c.classe is null')
                        ->andWhere('r.id = :region')
                        ->orderBy('c.nom', 'ASC')
                        ->addOrderBy('c.prenoms', 'ASC')
                        ->setParameters([
                            'region'=> $region,
                            //'A'=> 'A',
                            'c'=> 'C'
                        ])
                ;
        }else{
            return $this->createQueryBuilder('c')
                        //->innerJoin('c.region', 'r')
                        //->where('r.id = :region')
                        ->where('c.classe <> :a')
                        ->orWhere('c.classe is null')
                        ->orderBy('c.nom', 'ASC')
                        ->addOrderBy('c.prenoms', 'ASC')
                        ->setParameters([
                            //'region'=> $region,
                            'a'=> 'A',
                        ])
                ;
        }
    }

    /**
     * Nombre de chef
     * @uses DefaultController::indexAction()
     */
    public function findNombreNational($sexe = null)
    {
        if (!$sexe){
            return $this->createQueryBuilder('c')
                        ->select('count(c.id)')
                        ->getQuery()->getSingleScalarResult()
                ;
        }else{
            return $this->createQueryBuilder('c')
                        ->select('count(c.id)')
                        ->where('c.sexe = :sexe')
                        ->setParameter('sexe', $sexe)
                        ->getQuery()->getSingleScalarResult()
                ;
        }
    }

    /**
     * Nombre de chef selon la formation
     * @uses DefaultController::indexAction()
     * @uses DefaultController::formationAction()
     */
    public function findNombreByClasse($level, $region = null)
    {
        if (!$region){
            return $this->createQueryBuilder('c')
                        ->select('count(c.id)')
                        ->where('c.classe = :level')
                        ->setParameter('level', $level)
                        ->getQuery()->getSingleScalarResult()
                ;
        }else{
            return $this->createQueryBuilder('c')
                        ->select('count(c.id)')
                        ->where('c.classe = :level')
                        ->andWhere('c.region = :region')
                        ->setParameters([
                            'level' => $level,
                            'region' => $region
                        ])
                        ->getQuery()->getSingleScalarResult()
                ;
        }
    }
}
